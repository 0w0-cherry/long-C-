在传参和传返回值的过程中，一般编译器会做一些优化，减少对象的拷贝，这个在一些场景下还是非常有用的。

传值传参
A aa1;
f1(aa1);

cout << endl;
传值返回
f2();
cout << endl;
隐式类型，连续构造+拷贝构造->优化为直接构造
f1(1);
一个表达式中，连续构造+拷贝构造->优化为一个构造
f1(A(2));
cout << endl;
一个表达式中，连续拷贝构造+拷贝构造->优化一个拷贝构造 A aa2 = f2();
cout << endl;
一个表达式中，连续拷贝构造+赋值重载->无法优化
aa1 = f2();
cout << endl;
