一.C++兼容C，但对于结构体，它升级成了： 类
类的功能：
1.与C中的结构体相比，类多了定义函数的功能
2.在C++中，可用类的名称代表数据类型(如：Stack s1；)

二.关键字：class
1.功能：定义类的关键字
class className
{
类体：由成员函数和成员变量组成
};//后面带分号

三.访问限定符：
1.public(公有):  类外能访问
2.protect(保护)和private(私有):   类外不能访问

3.class默认访问权限为private,
4.struct默认访问权限为public(内部也可以使用访问限定符)

四.面向对象的三大特性：封装、继承、多态
1.封装：其本质是一种管控
(1)CPP将数据和方法都被放到类里面
(2)CPP使用访问限定符对成员进行限制，给访问是公有，不给访问是私有或保护

五.结构体内存对齐规则
1.第一个成员在与结构体偏移量为0的地址处。
2.其他成员变量要对齐到某个数字（对齐数）的整数倍的地址处。
注意：对齐数 = 编译器默认的一个对齐数 与 该成员大小的较小值。
VS中默认的对齐数为8
3. 结构体总大小为：最大对齐数（所有变量类型最大者与默认对齐参数取最小）的整数倍。 如果嵌套了结构体的情况，嵌套的结构体对齐到自己的最大对齐数的整数倍处，结构体的整
体大小就是所有最大对齐数（含嵌套结构体的对齐数）的整数倍。
4.对于C++中的类，额外规定：成员函数不计入内存的统计，但若类中只有成员函数，会以1字节表示占位(该类是存在的)
(成员函数不计入统计的原因:成员函数不存储在类中，存储在"公共代码区")
思考：内存对齐会造成空间浪费，那为什么要内存对齐？(计算机一般一次读取 4/8 字节)

六.可对空指针进行"解引用"
class A5{
public:
    void f2(){
        //此 f2()在"公共代码区"
        cout<<"a"<<endl;    
    }
};
A5* p2 = nullptr;
p2->f2();//正常运行
    //f2()不存储在类中
    //没有进行解引用操作
    //在编译时就已确定，会直接去"公共代码区"找

七.定义与声明的区别：是否开空间(开空间同时也是定义的标志)
